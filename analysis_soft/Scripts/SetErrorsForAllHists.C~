#include <vector>
#include <iostream>
#include <string>
#include "TList.h"
#include "TObject.h"
#include "TFile.h"
#include "TKey.h"
#include "TH1.h"
#include "TMath.h"

using namespace std;

vector<TH1*>
GetAllTH1(TFile& rootfile)
{
  TH1 *h=0;
  TKey *obj=0;
  TListIter li(rootfile.GetListOfKeys());
  vector<TH1*> histvec;

  while (obj = static_cast<TKey*>(li.Next()))
    {
      h = dynamic_cast<TH1*>(obj->ReadObj());
      if (h!=NULL && h->InheritsFrom("TH1")) 
	histvec.push_back(h);
    }
  cout << histvec.size() << endl;
  return histvec;
}

void
SetError(TH1* h)
{
  for (Int_t i=0; i<h->GetNbinsX()+1; i++)
    {
      h->SetBinError(i,TMath::Sqrt(h->GetBinContent(i)));
    }
}

void 
SetErrorsForAllHists(TFile *f)
{
  vector<TH1*> hvec = GetAllTH1(*f);
  vector<TH1*>::iterator it;

  for (it=hvec.begin(); it!=hvec.end(); it++)
    {
      SetError(*it);

      (*it)->Write("",TObject::kOverwrite);
    }
}
