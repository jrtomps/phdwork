// CreatePlotOverlay.C
//
// Jeromy Tompkins
// 11/29/2011
//
// Generates a plot of the data.


#include <iostream>
#include <string>
#include "TGraphErrors.h"
#include "TDirectory.h"
#include "TString.h"
#include "TObject.h"
#include "TMath.h"
#include "TH2.h"
using namespace std;


TH2D* hbg;


TCanvas* 
SafelyConstructCanvas(const Char_t* name)
{
  TCanvas* creturn;
  TObject *obj = 0;
  obj = gROOT->GetListOfCanvases()->FindObject(name);
  if (obj!=NULL)
    creturn = static_cast<TCanvas*>(obj);
  else
    creturn = new TCanvas(name);

  return creturn;
}


void
CreateCanvas(TGraphErrors* gr0, TGraphErrors* gr1)
{
  Double_t ymax = TMath::Max(gr0->GetMaximum(), gr1->GetMaximum())*1.1;
 
  hbg = new TH2D("hbg",";Theta(deg);Counts",100,0,180,100,0,ymax);
  string ans;
  cout << "Enter title of graph : ";
  cin  >> ans;
  hbg->SetTitle(ans.data());

  TCanvas *c = SafelyConstructCanvas("c");
  
  c->Draw();
  hbg->Draw("9");
  gr0->Draw("LP9");
  gr1->Draw("LP9");
}


void
CreatePlotOverlay(TDirectory* f)
{
  if (f==NULL)
    {
      cout << "null file argument" << endl;
      return;
    }
  else if ( !f->IsOpen())
    {
      cout << "file " << f->Name() << " doesn't exist" << endl;
      return;
    }

  
  TDirectory *dir=0;
  TObject *obj=0;
  TGraphErrors *gr0=0, *gr1=0;
  string dirname("uncorrected");

  if ( (obj = f->Get(dirname.data())) )
    {
     
      dir = static_cast<TDirectory*> obj;
      obj = dir->Get((dirname + "_phi0_yield").data());
      if (obj!=NULL) gr0 = static_cast<TGraphErrors*> obj;
      obj = dir->Get((dirname + "_phi90_yield").data());
      if (obj!=NULL) gr1 = static_cast<TGraphErrors*> obj;
      
      CreateCanvas(gr0,gr1); 
    }

  
  



}
